---

# Ansible community.general.pacman required
# Use : ansible-galaxy collection install community.general

- name: Run the equivalent of "pacman -Sy" as a separate step
  community.general.pacman:
    update_cache: true

- name: Run the equivalent of "pacman -Su" as a separate step
  community.general.pacman:
    upgrade: true

- name: Install needed packages
  community.general.pacman:
    name: 
      - alacritty
      - blueman
      - bluez-utils
      - flameshot
      - fzf
      - geeqie
      - otf-font-awesome
      - playerctl
      - polybar
      - python-pywal
      - vim
      - neovim
      - zsh
      - docker
      - dialog
      - redshift
      - nodejs
      - npm
      - texlive-most
      - texlive-langgreek
      - fontconfig
    state: present
  become: true
  tags:
    - pacman_packages


### Docker ###

- name: Start systemctl docker daemon
  shell: "systemctl start docker"
  tags:
    - docker

- name: Add it to sudo users
  shell: "sudo groupadd docker && sudo usermod -aG docker $USER"
  tags:
    - docker

### Docker ###
#
#

- name: check .zshrc exists
  stat:
    path: ~/.zshrc
  register: zshrc_exists
  tags:
    - zsh

- name: create .zshrc if not exists
  file:
    path: ~/.zshrc
    state: touch
  when: not zshrc_exists.stat.exists
  tags:
    - zsh



################### REDSHIFT ########################

- name: redshift alias night
  lineinfile:
    dest: ~/.zshrc
    line: 'alias night="redshift -O 3500"'
    state: present


- name: redshift alias day
  lineinfile:
    dest: ~/.zshrc
    line: 'alias day="redshift -x"'
    state: present


################ RUST START YEAH ######################

- name: check if cargo is installed
  shell: command -v cargo
  register: cargo_exists
  ignore_errors: yes
  tags:
    - rust
    - rustup

- name: Download Installer
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    mode: '0755'
    force: 'yes'
  when: cargo_exists.rc != 0
  tags:
    - rust
    - rustup

- name: install rust/cargo
  shell: /tmp/sh.rustup.rs -y
  when: cargo_exists is failed
  tags:
    - rust
    - rustup

- name: source rust
  lineinfile:
    dest: ~/.zshrc
    line: '[ -f ~/.cargo/env ] && source $HOME/.cargo/env'
    state: present
  tags:
    - rust
    - rustup

- name: source .zshrc to have cargo
  shell: source ~/.zshrc
  tags:
    - rust

- name: symlink cargo to usr local bin
  shell: ln -s ~/.cargo/bin/cargo /usr/local/bin/cargo 
  tags:
    - rust

- name: install cargo packages
  community.general.cargo:
    name:
      - broot
      - git-delta
  tags:
    - rust


          #- name: install broot 
          #  command: cargo install --git https://github.com/Canop/broot
          #
          #- name: install rust diff 
          #  command: cargo install --git https://github.com/dandavison/delta
          #

############### RUST END YEAH ########################

- name: Check if git config exists
  ansible.builtin.stat:
    path: ~/.gitconfig
  register: gitconfig_exists

- name: If not, make it
  command: touch ~/.gitconfig
  when: not gitconfig_exists

    #- name: Set gitconfig user name and email
    #  ini_file:
    #    path: ~/.gitconfig
    #    section: core
    #    option: pager
    #    value: delta
    #  become: true
    #
    #
    #- name: Add section to gitconfig
    #  ini_file:
    #    path: ~/.gitconfig
    #    block:
    #      newsection:
    #        option1: value1
    #        option2: value2
    #  become: true



################## HASKELL ############################

- name: Check if Haskell is installed
  command: ghc --version
  register: haskell_installed
  ignore_errors: yes
  tags: 
    - haskell


- name: Install Haskell Stack
  shell: "curl -sSL https://get.haskellstack.org/ | sh"
  when: haskell_installed is failed
  tags:
    - haskell

################## END HASKELL ###########################




############### PARU ##################################

# Ansible kewlfft.aur required
# Use : ansible-galaxy collection install kewlfft.aur

      #- name: Cloning paru
      #  git:
      #    repo=https://aur.archlinux.org/paru.git
      #    dest=/home/paru
      #  tags: 
      #    - paru
      #  
      #- name: install paru
      #  shell: "cd /home/paru && makepkg -si"
      #  become: true
      #  tags: 
      #    - paru
      #
      
- name: Install AUR needed packages using paru
  kewlfft.aur.aur:
    use: paru
    name:
      - visual-studio-code-bin
  tags:
    - paru

############### PARU ##################################


- name: Check if .oh-my-zsh exists
  stat:
    path: ~/.oh-my-zsh
  register: oh_my_zsh_result
  tags: 
    - zsh

- name: Cloning oh-my-zsh
  git:
    repo=https://github.com/robbyrussell/oh-my-zsh
    dest=~/.oh-my-zsh
  when: not oh_my_zsh_result.stat.exists
  tags: 
    - zsh

- name: Check if zsh-syntax-highlighting plugin exists
  stat:
    path: ~/.oh-my-zsh/plugins/zsh-syntax-highlighting
  register: zsh_syntax_highlighting_result
  tags: 
    - zsh
  
- name: Cloning zsh-syntax-highlighting plugin into oh-my-zsh folder
  git:
    repo=https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest=~/.oh-my-zsh/plugins/zsh-syntax-highlighting
  when: not zsh_syntax_highlighting_result.stat.exists
  tags: 
    - zsh

- name: Check if cdimascio-lambda theme exists
  stat:
    path: ~/.oh-my-zsh/themes/cdimascio-lambda.zsh-theme
  register: cdimascio_lambda_result
  tags: 
    - zsh

- name: Cloning cdimascio-lambda theme repository into /tmp
  git:
    repo=https://github.com/cdimascio/lambda-zsh-theme.git
    dest=/tmp/cdimascio-lambda/
  when: not cdimascio_lambda_result.stat.exists
  tags: 
    - zsh

- name: Move cdimascio-lambda theme to oh-my-zsh themes folder
  command: mv -f /tmp/cdimascio-lambda/cdimascio-lambda.zsh-theme ~/.oh-my-zsh/themes/cdimascio-lambda.zsh-theme
  when: not cdimascio_lambda_result.stat.exists
  tags: 
    - zsh

- name: Removing cdimascio-lambda theme repository
  file:
    path: /tmp/cdimascio-lambda/
    state: absent
  when: not cdimascio_lambda_result.stat.exists
  tags: 
    - zsh

- name: Change user shell to zsh 
  user:
    name: "{{ ansible_user_id }}"
    shell: /bin/zsh
  become: true
  tags: 
    - zsh


#### ZSH THEME ####
#


- name: Create directory if it does not exist
  file:
    path: /usr/share/fonts/
    state: directory
    owner: root
    group: root
    mode: 0750
  become: true
  tags: 
    - notfont

- name: Download font file
  get_url:
    url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
    dest: '/tmp/MesloLGS NF Regular.ttf' 
  tags: 
    - font

  # name of  file doesnt matter
- name: Copy font file to system's font directory
  copy:
    src: '/tmp/MesloLGS NF Regular.ttf'
    dest: '/usr/share/fonts/MesloLGS NF Regular.ttf'
    owner: root
    group: root
    mode: 0644
  become: true
  tags: 
    - font


- name: Download font file bold
  get_url:
    url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
    dest: '/tmp/MesloLGS NF Bold.ttf' 
  tags: 
    - font

      # name of  file doesnt matter
- name: Copy font file to system's font directory bold
  copy:
    src: '/tmp/MesloLGS NF Bold.ttf'
    dest: '/usr/share/fonts/MesloLGS NF Bold.ttf'
    owner: root
    group: root
    mode: 0644
  become: true
  tags: 
    - font


- name: Download font file italic
  get_url:
    url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
    dest: '/tmp/MesloLGS NF Italic.ttf' 
  tags: 
    - font

      # name of  file doesnt matter
- name: Copy font file to system's font directory Italic
  copy:
    src: '/tmp/MesloLGS NF Bold.ttf'
    dest: '/usr/share/fonts/MesloLGS NF Italic.ttf'
    owner: root
    group: root
    mode: 0644
  become: true
  tags: 
    - font


- name: Download font file  bold italic
  get_url:
    url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf
    dest: '/tmp/MesloLGS NF Bold Italic.ttf' 
  tags: 
    - font

      # name of  file doesnt matter
- name: Copy font file to system's font directory  bold Italic
  copy:
    src: '/tmp/MesloLGS NF Bold.ttf'
    dest: '/usr/share/fonts/MesloLGS NF Bold Italic.ttf'
    owner: root
    group: root
    mode: 0644
  become: true
  tags: 
    - font

- name: Update font cache
  command: fc-cache -fv
  become: true
  tags: 
    - font

